// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id                  String               @id @default(cuid())
  email               String               @unique
  name                String?
  password            String
  Quizs               Quiz[]
  QuizQuestionAnswers QuizQuestionAnswer[]
}

model Subject {
  id                  String               @id @default(cuid())
  name                String
  description         String?
  parentId            String?
  createdAt           DateTime             @default(now())
  Parent              Subject?             @relation("subjectParent", fields: [parentId], references: [id])
  Subjects            Subject[]            @relation("subjectParent")
  Questions           Question[]
  Quizs               Quiz[]
  QuizQuestionAnswers QuizQuestionAnswer[]
}

model Question {
  id                  String               @id @default(cuid())
  subjectId           String
  Subject             Subject              @relation(fields: [subjectId], references: [id])
  text                String
  correctAnswer       String
  verified            Boolean              @default(false)
  answers             String[]
  QuizQuestionAnswers QuizQuestionAnswer[]
}

model Quiz {
  id                  String               @id @default(cuid())
  subjectId           String
  Subject             Subject              @relation(fields: [subjectId], references: [id])
  userId              String
  User                User                 @relation(fields: [userId], references: [id])
  QuizQuestionAnswers QuizQuestionAnswer[]
  status              QuizStatus           @default(STARTED)
  config              Json                 @default("{}")
  createdAt           DateTime             @default(now())
  finishedAt          DateTime?
}

enum QuizStatus {
  STARTED
  FINISHED
}

model QuizQuestionAnswer {
  id         String   @id @default(cuid())
  questionId String
  Question   Question @relation(fields: [questionId], references: [id])
  quizId     String
  Quiz       Quiz     @relation(fields: [quizId], references: [id])
  subjectId  String
  Subject    Subject  @relation(fields: [subjectId], references: [id])
  userId     String
  User       User     @relation(fields: [userId], references: [id])
  answer     String
  isCorrect  Boolean
  sequence   Int
  createdAt  DateTime @default(now())
}
